" Indentation {{{
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab
" }}}

" Line appearance {{{
set number
"set nu rnu
set showbreak=â†ª
set breakindent
" }}}

"Folding {{{
"set foldlevel=0
set foldmethod=marker
" }}}

" Search and Autocomplete {{{
set wildmenu
set incsearch
" }}}

" Autoreload {{{
autocmd! bufwritepost .vimrc source %
" }}}

" Tabs {{{
nnoremap <C-l> :tabn<CR>
nnoremap <C-h> :tabp<CR>
" }}}

"Windows {{{
""Moving {{{
nnoremap h <C-W><C-H>
nnoremap j <C-W><C-J>
nnoremap k <C-W><C-K>
nnoremap l <C-W><C-L>
""}}}
"" Resizing {{{
nnoremap H :vertical resize +5<CR>
nnoremap J :resize -5<CR>
nnoremap K :resize +5<CR>
nnoremap L :vertical resize -5<CR>
"" }}}
"}}}

" Miscellanea {{{
"set mouse=a
imap kj <Esc>
imap jk <Esc>
" Avoid black lines when using vim with kitty
let &t_ut=''
" Build&Run Barrelfish
"" Notes {{{
"" (Double <CR> to avoid buggy silent mode)
"" using bash -c since with sh -c the var $? doesn't resepct to outcome of build.sh
"" First nnoremap is for single monitor, second is for two monitor
"" }}}
nnoremap <C-b> :!(pkill qemu-system-arm; kitty @ --to unix:/tmp/barrelfish_build send-text "make -j4 qemu_a15ve_4\n")<CR><CR>
nnoremap b :!(pkill qemu-system-arm;)&<CR><CR>
"}}}

"Initial setup {{{
if empty(glob('~/.vim/autoload/plug.vim'))
silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
" }}}

" Plugins {{{
call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'altercation/vim-colors-solarized'
"Plug 'valloric/youcompleteme'
Plug 'tpope/vim-fugitive'
"Plug 'rdnetto/YCM-Generator', { 'branch': 'stable'}
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
"Plug 'JamshedVesuna/vim-markdown-preview'
Plug 'majutsushi/tagbar'
Plug 'posva/vim-vue'
call plug#end()

" Nerdtree {{{
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'
let g:NERDAltDelims_c=1
"" }}}

" Solarized {{{
let g:solarized_termcolors=256
syntax enable
set background=dark
"set background=light
colorscheme solarized
"" }}}

""{{{ VimAirline
let g:airline_theme='solarized'
let g:airline_solarized_bg='dark'
"let g:airline_solarized_bg='light'
""}}}

""{{{ YouCompleteMe
"let g:ycm_global_ycm_extra_conf = '$HOME/.ycm_extra_conf.py'
""}}}

" {{{ Fzf
nnoremap ; :Files<CR>
" }}}

" MarkdownPreview {{{
let vim_markdown_preview_browser='Firefox'
let vim_markdown_preview_github=1
let vim_markdown_preview_toggle=2
" }}}

" Ag {{{
nmap <C-]> :Ag <C-R><C-W><CR>
" }}}

" Tagbar {{{
nnoremap <C-t> :TagbarOpen f<CR>
" }}}

" }}}
